{
  "name": "ES6",
  "isUpcomingChange": false,
  "dashedName": "es6",
  "order": 2,
  "time": "5 hours",
  "template": "",
  "required": [],
  "superBlock": "javascript-algorithms-and-data-structures",
  "superOrder": 2,
  "challengeOrder": [
    [
      "587d7b87367417b2b2512b3f",
      "Explore Differences Between the var and let Keywords"
    ],
    [
      "587d7b87367417b2b2512b40",
      "Compare Scopes of the var and let Keywords"
    ],
    [
      "587d7b87367417b2b2512b41",
      "Declare a Read-Only Variable with the const Keyword"
    ],
    [
      "587d7b87367417b2b2512b42",
      "Mutate an Array Declared with const"
    ],
    [
      "598f48a36c8c40764b4e52b3",
      "Prevent Object Mutation"
    ],
    [
      "587d7b87367417b2b2512b43",
      "Use Arrow Functions to Write Concise Anonymous Functions"
    ],
    [
      "587d7b88367417b2b2512b44",
      "Write Arrow Functions with Parameters"
    ],
    [
      "587d7b88367417b2b2512b46",
      "Set Default Parameters for Your Functions"
    ],
    [
      "587d7b88367417b2b2512b47",
      "Use the Rest Parameter with Function Parameters"
    ],
    [
      "587d7b89367417b2b2512b48",
      "Use the Spread Operator to Evaluate Arrays In-Place"
    ],
    [
      "5cfa550e84205a357704ccb6",
      "Use Destructuring Assignment to Extract Values from Objects"
    ],
    [
      "587d7b89367417b2b2512b49",
      "Use Destructuring Assignment to Assign Variables from Objects"
    ],
    [
      "587d7b89367417b2b2512b4a",
      "Use Destructuring Assignment to Assign Variables from Nested Objects"
    ],
    [
      "587d7b89367417b2b2512b4b",
      "Use Destructuring Assignment to Assign Variables from Arrays"
    ],
    [
      "587d7b8a367417b2b2512b4c",
      "Use Destructuring Assignment with the Rest Parameter to Reassign Array Elements"
    ],
    [
      "587d7b8a367417b2b2512b4d",
      "Use Destructuring Assignment to Pass an Object as a Function's Parameters"
    ],
    [
      "587d7b8a367417b2b2512b4e",
      "Create Strings using Template Literals"
    ],
    [
      "587d7b8a367417b2b2512b4f",
      "Write Concise Object Literal Declarations Using Object Property Shorthand"
    ],
    [
      "587d7b8b367417b2b2512b50",
      "Write Concise Declarative Functions with ES6"
    ],
    [
      "587d7b8b367417b2b2512b53",
      "Use class Syntax to Define a Constructor Function"
    ],
    [
      "587d7b8c367417b2b2512b54",
      "Use getters and setters to Control Access to an Object"
    ],
    [
      "5cddbfd622f1a59093ec611d",
      "Create a Module Script"
    ],
    [
      "587d7b8c367417b2b2512b56",
      "Use export to Share a Code Block"
    ],
    [
      "587d7b8c367417b2b2512b55",
      "Reuse JavaScript Code Using import"
    ],
    [
      "587d7b8c367417b2b2512b57",
      "Use * to Import Everything from a File"
    ],
    [
      "587d7b8c367417b2b2512b58",
      "Create an Export Fallback with export default"
    ],
    [
      "587d7b8d367417b2b2512b59",
      "Import a Default Export"
    ],
    [
      "5cdafbb0291309899753167f",
      "Create a JavaScript Promise"
    ],
    [
      "5cdafbc32913098997531680",
      "Complete a Promise with resolve and reject"
    ],
    [
      "5cdafbd72913098997531681",
      "Handle a Fulfilled Promise with then"
    ],
    [
      "5cdafbe72913098997531682",
      "Handle a Rejected Promise with catch"
    ]
  ]}
