{
  "name": "Rosetta Code",
  "isUpcomingChange": false,
  "dashedName": "rosetta-code",
  "order": 5,
  "time": "",
  "template": "",
  "required": [],
  "superBlock": "coding-interview-prep",
  "superOrder": 12,
  "challengeOrder": [
    [
      "594810f028c0303b75339acb",
      "100 doors"
    ],
    [
      "5951e88f64ebf159166a1176",
      "24 game"
    ],
    [
      "5949b579404977fbaefcd736",
      "9 billion names of God the integer"
    ],
    [
      "594810f028c0303b75339acc",
      "ABC Problem"
    ],
    [
      "594810f028c0303b75339acd",
      "Abundant, deficient and perfect number classifications"
    ],
    [
      "594810f028c0303b75339ace",
      "Accumulator factory"
    ],
    [
      "594810f028c0303b75339acf",
      "Ackermann function"
    ],
    [
      "594810f028c0303b75339ad0",
      "Align columns"
    ],
    [
      "5949b579404977fbaefcd737",
      "Amicable pairs"
    ],
    [
      "594d8d0ab97724821379b1e6",
      "Averages/Mode"
    ],
    [
      "594d966a1467eb84194f0086",
      "Averages/Pythagorean means"
    ],
    [
      "594da033de4190850b893874",
      "Averages/Root mean square"
    ],
    [
      "594db4d0dedb4c06a2a4cefd",
      "Babbage problem"
    ],
    [
      "594dc6c729e5700999302b45",
      "Balanced brackets"
    ],
    [
      "5951815dd895584b06884620",
      "Circles of given radius through two points"
    ],
    [
      "5951a53863c8a34f02bf1bdc",
      "Closest-pair problem"
    ],
    [
      "5958469238c0d8d2632f46db",
      "Combinations"
    ],
    [
      "596e414344c3b2872167f0fe",
      "Comma quibbling"
    ],
    [
      "596e457071c35c882915b3e4",
      "Compare a list of strings"
    ],
    [
      "596fd036dc1ab896c5db98b1",
      "Convert seconds to compound duration"
    ],
    [
      "596fda99c69f779975a1b67d",
      "Count occurrences of a substring"
    ],
    [
      "59713bd26bdeb8a594fb9413",
      "Count the coins"
    ],
    [
      "59713da0a428c1a62d7db430",
      "Cramer's rule"
    ],
    [
      "5a23c84252665b21eecc7e03",
      "Cumulative standard deviation"
    ],
    [
      "5a23c84252665b21eecc7e05",
      "CUSIP"
    ],
    [
      "5a23c84252665b21eecc7e06",
      "Cut a rectangle"
    ],
    [
      "59669d08d75b60482359409f",
      "Date format"
    ],
    [
      "5966c21cf732a95f1b67dd28",
      "Date manipulation"
    ],
    [
      "5966f99c45e8976909a85575",
      "Day of the week"
    ],
    [
      "59694356a6e7011f7f1c5f4e",
      "Deal cards for FreeCell"
    ],
    [
      "596a8888ab7c01048de257d5",
      "Deepcopy"
    ],
    [
      "597089c87eec450c68aa1643",
      "Define a primitive data type"
    ],
    [
      "59f40b17e79dbf1ab720ed7a",
      "Department Numbers"
    ],
    [
      "59f4eafba0343628bb682785",
      "Discordian date"
    ],
    [
      "5a23c84252665b21eecc7e1e",
      "Dot product"
    ],
    [
      "599c333915e0ea32d04d4bec",
      "Element-wise operations"
    ],
    [
      "599d0ba974141b0f508b37d5",
      "Emirp primes"
    ],
    [
      "599d15309e88c813a40baf58",
      "Entropy"
    ],
    [
      "5987fd532b954e0f21b5d3f6",
      "Equilibrium index"
    ],
    [
      "599d1566a02b571412643b84",
      "Ethiopian multiplication"
    ],
    [
      "59880443fb36441083c6c20e",
      "Euler method"
    ],
    [
      "598de241872ef8353c58a7a2",
      "Evaluate binomial coefficients"
    ],
    [
      "59e09e6d412c5939baa02d16",
      "Execute a Markov algorithm"
    ],
    [
      "59e0a8df964e4540d5abe599",
      "Execute Brain****"
    ],
    [
      "598ee8b91b410510ae82efef",
      "Extensible prime generator"
    ],
    [
      "597b2b2a2702b44414742771",
      "Factorial"
    ],
    [
      "598eea87e5cf4b116c3ff81a",
      "Factors of a Mersenne number"
    ],
    [
      "597f1e7fbc206f0e9ba95dc4",
      "Factors of an integer"
    ],
    [
      "59c3ec9f15068017c96eb8a3",
      "Farey sequence"
    ],
    [
      "598eef80ba501f1268170e1e",
      "Fibonacci n-step number sequences"
    ],
    [
      "597f24c1dda4e70f53c79c81",
      "Fibonacci sequence"
    ],
    [
      "5992e222d397f00d21122931",
      "Fibonacci word"
    ],
    [
      "5e9ddb06ec35240f39657419",
      "FizzBuzz"
    ],
    [
      "5a7dad05be01840e1778a0d1",
      "Fractran"
    ],
    [
      "5a23c84252665b21eecc7e76",
      "Gamma function"
    ],
    [
      "5a23c84252665b21eecc7e77",
      "Gaussian elimination"
    ],
    [
      "5a23c84252665b21eecc7e78",
      "General FizzBuzz"
    ],
    [
      "5a23c84252665b21eecc7e7a",
      "Generate lower case ASCII alphabet"
    ],
    [
      "5a23c84252665b21eecc7e7b",
      "Generator/Exponential"
    ],
    [
      "5a23c84252665b21eecc7e80",
      "Gray code"
    ],
    [
      "5a23c84252665b21eecc7e82",
      "Greatest common divisor"
    ],
    [
      "5a23c84252665b21eecc7e84",
      "Greatest subsequential sum"
    ],
    [
      "595608ff8bcd7a50bd490181",
      "Hailstone sequence"
    ],
    [
      "594810f028c0303b75339ad1",
      "Happy numbers"
    ],
    [
      "595668ca4cfe1af2fb9818d4",
      "Harshad or Niven series"
    ],
    [
      "595671d4d2cdc305f0d5b36f",
      "Hash from two arrays"
    ],
    [
      "5956795bc9e2c415eb244de1",
      "Hash join"
    ],
    [
      "595b98f8b5a2245e243aa831",
      "Heronian triangles"
    ],
    [
      "59622f89e4e137560018a40e",
      "Hofstadter Figure-Figure sequences"
    ],
    [
      "59637c4d89f6786115efd814",
      "Hofstadter Q sequence"
    ],
    [
      "5a23c84252665b21eecc7eb0",
      "I before E except after C"
    ],
    [
      "5a23c84252665b21eecc7eaf",
      "IBAN"
    ],
    [
      "5a23c84252665b21eecc7eb1",
      "Identity matrix"
    ],
    [
      "5a23c84252665b21eecc7ec1",
      "Iterated digits squaring"
    ],
    [
      "5a23c84252665b21eecc7ec2",
      "Jaro distance"
    ],
    [
      "5a23c84252665b21eecc7ec4",
      "JortSort"
    ],
    [
      "5a23c84252665b21eecc7ec5",
      "Josephus problem"
    ],
    [
      "5a23c84252665b21eecc7ecb",
      "K-d tree"
    ],
    [
      "5a23c84252665b21eecc7eca",
      "Kaprekar numbers"
    ],
    [
      "5a23c84252665b21eecc7ed1",
      "Knapsack problem/0-1"
    ],
    [
      "5a23c84252665b21eecc7ed2",
      "Knapsack problem/Bounded"
    ],
    [
      "5a23c84252665b21eecc7ed3",
      "Knapsack problem/Continuous"
    ],
    [
      "5a23c84252665b21eecc7ed4",
      "Knapsack problem/Unbounded"
    ],
    [
      "5a23c84252665b21eecc7ed5",
      "Knight's tour"
    ],
    [
      "5a23c84252665b21eecc7edb",
      "Largest int from concatenated ints"
    ],
    [
      "5e4ce2b6ac708cc68c1df25e",
      "Last letter-first letter"
    ],
    [
      "5a23c84252665b21eecc7edc",
      "Last Friday of each month"
    ],
    [
      "5a23c84252665b21eecc7ede",
      "Leap year"
    ],
    [
      "5a23c84252665b21eecc7edf",
      "Least common multiple"
    ],
    [
      "5a23c84252665b21eecc7ee0",
      "Left factorials"
    ],
    [
      "5e4ce2bbac708cc68c1df25f",
      "Letter frequency"
    ],
    [
      "5e4ce2eaac708cc68c1df260",
      "Levenshtein distance"
    ],
    [
      "5e4ce2f5ac708cc68c1df261",
      "Linear congruential generator"
    ],
    [
      "5e4ce2a1ac708cc68c1df25d",
      "Long multiplication"
    ],
    [
      "5e6dd1278e6ca105cde40ea9",
      "Longest common subsequence"
    ],
    [
      "5e6dd139859c290b6ab80292",
      "Longest increasing subsequence"
    ],
    [
      "5e6dd14192286d95fc43046e",
      "Longest string challenge"
    ],
    [
      "5e6dd14797f5ce267c2f19d0",
      "Look-and-say sequence"
    ],
    [
      "5e6dd15004c88cf00d2a78b3",
      "Loop over multiple arrays simultaneously"
    ],
    [
      "5e6decd8ec8d7db960950d1c",
      "LU decomposition"
    ],
    [
      "5e6dee7749a0b85a3f1fc7d5",
      "Lucas-Lehmer test"
    ],
    [
      "5ea281203167d2b0bdefca00",
      "Ludic numbers"
    ],
    [
      "5ea28156e79528a9ab248f27",
      "Luhn test of credit card numbers"
    ],
    [
      "5ea2815a8640bcc6cb7dab3c",
      "Lychrel numbers"
    ],
    [
      "5ea2815e364d9a2222ea55f8",
      "LZW compression"
    ],
    [
      "59667989bf71cf555dd5d2ff",
      "S-Expressions"
    ],
    [
      "59da22823d04c95919d46269",
      "Sailors, coconuts and a monkey problem"
    ],
    [
      "5eb3e497b8d6d7f63c5517ea",
      "Search a list of records"
    ],
    [
      "59d9c6bc214c613ba73ff012",
      "SEDOLs"
    ],
    [
      "5eaf48389ee512d4d103684b",
      "Self Describing Numbers"
    ],
    [
      "5eb3e4a21f462f409d656c73",
      "Self-referential sequence"
    ],
    [
      "5eb3e4aa847216613aa81983",
      "Semiprime"
    ],
    [
      "5eb3e4af7d0e7b760b46cedc",
      "Set consolidation"
    ],
    [
      "5eb3e4b20aa93c437f9e9717",
      "Set of real numbers"
    ],
    [
      "5eb3e4b5f629b9a07429a5d2",
      "SHA-1"
    ],
    [
      "5eb3e4c3a894c333d2811a3f",
      "SHA-256"
    ],
    [
      "5a23c84252665b21eecc7ffe",
      "Sort an array of composite structures"
    ],
    [
      "5a23c84252665b21eecc8000",
      "Sort disjoint sublist"
    ],
    [
      "5a23c84252665b21eecc8014",
      "Sort stability"
    ],
    [
      "5a23c84252665b21eecc8016",
      "Sort using a custom comparator"
    ],
    [
      "5a23c84252665b21eecc8001",
      "Sorting algorithms/Bead sort"
    ],
    [
      "5a23c84252665b21eecc8002",
      "Sorting algorithms/Bogosort"
    ],
    [
      "5a23c84252665b21eecc8004",
      "Sorting algorithms/Cocktail sort"
    ],
    [
      "5a23c84252665b21eecc8005",
      "Sorting algorithms/Comb sort"
    ],
    [
      "5a23c84252665b21eecc8007",
      "Sorting algorithms/Gnome sort"
    ],
    [
      "5a23c84252665b21eecc800b",
      "Sorting algorithms/Pancake sort"
    ],
    [
      "5a23c84252665b21eecc800c",
      "Sorting algorithms/Permutation sort"
    ],
    [
      "5a23c84252665b21eecc8010",
      "Sorting algorithms/Shell sort"
    ],
    [
      "5a23c84252665b21eecc8012",
      "Sorting algorithms/Stooge sort"
    ],
    [
      "5a23c84252665b21eecc8013",
      "Sorting algorithms/Strand sort"
    ],
    [
      "5a23c84252665b21eecc8017",
      "Soundex"
    ],
    [
      "5a23c84252665b21eecc801c",
      "Spiral matrix"
    ],
    [
      "5a23c84252665b21eecc801d",
      "Split a character string based on change of character"
    ],
    [
      "5a23c84252665b21eecc8024",
      "State name puzzle"
    ],
    [
      "5a23c84252665b21eecc8028",
      "Stern-Brocot sequence"
    ],
    [
      "5a23c84252665b21eecc8029",
      "Straddling checkerboard"
    ],
    [
      "5a23c84252665b21eecc802a",
      "Stream Merge"
    ],
    [
      "5a23c84252665b21eecc8036",
      "Strip control codes and extended characters from a string"
    ],
    [
      "5a23c84252665b21eecc8038",
      "Subleq"
    ],
    [
      "5a23c84252665b21eecc803c",
      "Sudoku"
    ],
    [
      "5a23c84252665b21eecc803f",
      "Sum digits of an integer"
    ],
    [
      "5a23c84252665b21eecc8040",
      "Sum multiples of 3 and 5"
    ],
    [
      "5a23c84252665b21eecc8041",
      "Sum of a series"
    ],
    [
      "5a23c84252665b21eecc8042",
      "Sum of squares"
    ],
    [
      "5a23c84252665b21eecc8043",
      "Sum to 100"
    ],
    [
      "5a23c84252665b21eecc8045",
      "Sutherland-Hodgman polygon clipping"
    ],
    [
      "5a23c84252665b21eecc8046",
      "Symmetric difference"
    ],
    [
      "594ecc0d9a8cf816e3340187",
      "Taxicab numbers"
    ],
    [
      "594faaab4e2a8626833e9c3d",
      "Tokenize a string with escaping"
    ],
    [
      "594fa2746886f41f7d8bf225",
      "Topological sort"
    ],
    [
      "595011cba5a81735713873bd",
      "Top rank per group"
    ],
    [
      "5951ed8945deab770972ae56",
      "Towers of Hanoi"
    ],
    [
      "594810f028c0303b75339ad2",
      "Vector cross product"
    ],
    [
      "594810f028c0303b75339ad3",
      "Vector dot product"
    ],
    [
      "5e94a54cc7b022105bf0fd2c",
      "Word frequency"
    ],
    [
      "594810f028c0303b75339ad4",
      "Word wrap"
    ],
    [
      "594810f028c0303b75339ad5",
      "Y combinator"
    ],
    [
      "594810f028c0303b75339ad6",
      "Zeckendorf number representation"
    ],
    [
      "594810f028c0303b75339ad7",
      "Zhang-Suen thinning algorithm"
    ],
    [
      "594810f028c0303b75339ad8",
      "Zig-zag matrix"
    ]
  ]}
